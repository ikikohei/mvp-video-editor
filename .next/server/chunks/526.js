(()=>{"use strict";let e=self;e.importScripts("/manual/video_edit_2/ffmpeg-core.js");class t{detectCompletion(e){"FFMPEG_END"===e&&null!==this.runResolve&&(this.runResolve(),this.runResolve=null,this.running=!1)}log(e){postMessage({type:"log",data:e}),this.detectCompletion(e)}async createCore(){try{return await createFFmpegCore({mainScriptUrlOrBlob:"/manual/video_edit_2/ffmpeg-core.js",printErr:e=>this.log(e),print:e=>this.log(e),locateFile:(e,t)=>e.endsWith("ffmpeg-core.wasm")?"/manual/video_edit_2/ffmpeg-core.wasm":e.endsWith("ffmpeg-core.worker.js")?"/manual/video_edit_2/ffmpeg-core.worker.js":t+e})}catch(e){if("bad memory"===e.message)throw Error("ffmpeg didn't start. #enable-webassembly-threads may not be enabled in chrome://flags. Open chrome console for more info.");throw Error("ffmpeg didn't start: "+e.message)}}async load(){return this.ffmpegCore?"ffmpeg already loaded":(this.ffmpegCore=await this.createCore(),this.ffmpegMain=this.ffmpegCore.cwrap("proxy_main","number",["number","number"]),"Loaded ffmpeg")}updateFile(e){this.videoFile=e;let t=this.ffmpegCore.FS,r=t.readdir("/");-1===r.indexOf("input")?t.mkdir("/input"):this.ffmpegCore.FS_unmount("/input"),-1===r.indexOf("output")&&t.mkdir("/output");let i=this.ffmpegCore.FS_filesystems.WORKERFS,o=new File([e],"tmpfile",{type:e.type});this.ffmpegCore.FS_mount(i,{files:[o]},"/input")}parseArgs(e){let t=this.ffmpegCore._malloc(e.length*Uint32Array.BYTES_PER_ELEMENT);return e.forEach((e,r)=>{let i=this.ffmpegCore._malloc(e.length+1);this.ffmpegCore.writeAsciiToMemory(e,i),this.ffmpegCore.setValue(t+Uint32Array.BYTES_PER_ELEMENT*r,i,"i32")}),[e.length,t]}FS(e,...t){if(!this.ffmpegCore)throw Error("Failed to run command. ffmpeg isn't loaded yet");var r=null;try{r=this.ffmpegCore.FS[e](...t)}catch(r){if("readdir"===e)throw Error(`ffmpeg.FS('readdir', '${t[0]}') error. Check if the path exists, ex: ffmpeg.FS('readdir', '/')`);if("readFile"===e)throw Error(`ffmpeg.FS('readFile', '${t[0]}') error. Check if the path exists`);throw Error("Oops, something went wrong in FS operation.")}return r}async run(...e){if(this.ffmpegCore){if(!this.running)return this.running=!0,new Promise(t=>{let r=[...this.defaultArgs,...e].filter(e=>0!==e.length);console.log(`Run: ${r.join(" ")}`),this.runResolve=t,this.ffmpegMain(...this.parseArgs(r))});throw Error("ffmpeg.wasm can only run one command at a time")}throw Error("Failed to run command. ffmpeg isn't loaded yet")}constructor(){this.ffmpegCore=null,this.ffmpegMain=null,this.videoFile=null,this.running=!1,this.runResolve=null,this.fileCount=0,this.defaultArgs=["./ffmpeg","-nostdin","-y"]}}let r=e=>o.FS("readdir","/output/").includes(e),i=e=>o.FS("readFile",e),o=new t;e.onmessage=async({data:{file:t,args:s,output:n,outname:a,mimetype:f,isStream:l}})=>{let m=0,p=t=>{e.postMessage({progress:t})};try{p("Initializing FFmpeg"),await o.load();try{o.FS("readFile",n)}catch{if(p("Loading Video Data"),o.updateFile(t),p("Running FFMpeg"),l&&setInterval(()=>{r(`${m+1}.mp4`)&&(e.postMessage({segment:{part:m,buffer:i(`/output/${m}.mp4`)}}),m++)},200),await o.run(...s),l)for(;r(`${m}.mp4`);)e.postMessage({segment:{part:m,buffer:i(`/output/${m}.mp4`)}}),m++;o.FS("readFile",n)}if(l){e.postMessage({});return}let g=o.FS("readFile",n),d=new File([g],a,{type:f});e.postMessage(d)}catch(t){console.error(t),e.postMessage({error:t})}},module.exports={}})();